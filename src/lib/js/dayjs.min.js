! function (t, e) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : t.dayjs = e()
}(this, function () {
    "use strict";
    var t = "second",
        e = "minute",
        n = "hour",
        s = "day",
        r = "week",
        i = "month",
        a = "year",
        u = "Sunday.Monday.Tuesday.Wednesday.Thursday.Friday.Saturday".split("."),
        c = "January.February.March.April.May.June.July.August.September.October.November.December".split("."),
        h = /^(\d{4})-?(\d{2})-?(\d{1,2})$/,
        o = /Y{2,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}/g,
        $ = function (t, e, n) {
            var s = String(t);
            return !s || s.length >= e ? t : "" + Array(e + 1 - s.length).join(n) + t
        },
        d = function (t) {
            return t && String(t).toLowerCase().replace(/s$/, "")
        },
        f = function (t) {
            return void 0 === t
        },
        l = function (t) {
            var e;
            return null === t ? new Date(NaN) : f(t) ? new Date : t instanceof Date ? t : (e = String(t).match(h)) ? new Date(e[1], e[2] - 1, e[3]) : new Date(t)
        },
        m = function () {
            function h(t) {
                this.$d = l(t), this.init()
            }
            var m = h.prototype;
            return m.init = function () {
                var t, e, n;
                this.$zone = this.$d.getTimezoneOffset() / 60, this.$zoneStr = (t = this.$zone, n = "", n = (e = -1 * t) > -10 && e < 10 ? "$10$200" : "$1$200", $(String(e).replace(/^(.)?(\d)/, n), 5, "+")), this.$y = this.$d.getFullYear(), this.$M = this.$d.getMonth(), this.$D = this.$d.getDate(), this.$W = this.$d.getDay(), this.$H = this.$d.getHours(), this.$m = this.$d.getMinutes(), this.$s = this.$d.getSeconds(), this.$ms = this.$d.getMilliseconds()
            }, m.isValid = function () {
                return !("Invalid Date" === this.$d.toString())
            }, m.isLeapYear = function () {
                return this.$y % 4 == 0 && this.$y % 100 != 0 || this.$y % 400 == 0
            }, m.isSame = function (t) {
                return this.valueOf() === t.valueOf()
            }, m.isBefore = function (t) {
                return this.valueOf() < t.valueOf()
            }, m.isAfter = function (t) {
                return this.valueOf() > t.valueOf()
            }, m.year = function () {
                return this.$y
            }, m.month = function () {
                return this.$M
            }, m.day = function () {
                return this.$W
            }, m.date = function () {
                return this.$D
            }, m.hour = function () {
                return this.$H
            }, m.minute = function () {
                return this.$m
            }, m.second = function () {
                return this.$s
            }, m.millisecond = function () {
                return this.$ms
            }, m.unix = function () {
                return Math.floor(this.valueOf() / 1e3)
            }, m.valueOf = function () {
                return this.$d.getTime()
            }, m.startOf = function (u, c) {
                var o = this,
                    $ = !!f(c) || c,
                    l = function (t, e, n) {
                        void 0 === n && (n = o.$y);
                        var r = new h(new Date(n, e, t));
                        return $ ? r : r.endOf(s)
                    },
                    m = function (t, e) {
                        return new h(o.toDate()[t].apply(o.toDate(), $ ? [0, 0, 0, 0].slice(e) : [23, 59, 59, 999].slice(e)))
                    };
                switch (d(u)) {
                    case a:
                        return $ ? l(1, 0) : l(31, 11, this.$y);
                    case i:
                        return $ ? l(1, this.$M) : l(0, this.$M + 1, this.$y);
                    case r:
                        return $ ? l(this.$D - this.$W, this.$M) : l(this.$D + (6 - this.$W), this.$M, this.$y);
                    case s:
                    case "date":
                        return m("setHours", 0);
                    case n:
                        return m("setMinutes", 1);
                    case e:
                        return m("setSeconds", 2);
                    case t:
                        return m("setMilliseconds", 3);
                    default:
                        return this.clone()
                }
            }, m.endOf = function (t) {
                return this.startOf(t, !1)
            }, m.mSet = function (s, r) {
                switch (d(s)) {
                    case "date":
                        this.$d.setDate(r);
                        break;
                    case i:
                        this.$d.setMonth(r);
                        break;
                    case a:
                        this.$d.setFullYear(r);
                        break;
                    case n:
                        this.$d.setHours(r);
                        break;
                    case e:
                        this.$d.setMinutes(r);
                        break;
                    case t:
                        this.$d.setSeconds(r);
                        break;
                    case "millisecond":
                        this.$d.setMilliseconds(r)
                }
                return this.init(), this
            }, m.set = function (t, e) {
                return n = e, Number.isNaN(parseFloat(n)) || !Number.isFinite(n) ? this : this.clone().mSet(t, e);
                var n
            }, m.add = function (t, u) {
                var c, o = u && 1 === u.length ? u : d(u);
                if (["M", i].indexOf(o) > -1) {
                    var $ = this.set("date", 1).set(i, this.$M + t);
                    return $ = $.set("date", Math.min(this.$D, $.daysInMonth()))
                }
                if (["y", a].indexOf(o) > -1) return this.set(a, this.$y + t);
                switch (o) {
                    case "m":
                    case e:
                        c = 6e4;
                        break;
                    case "h":
                    case n:
                        c = 36e5;
                        break;
                    case "d":
                    case s:
                        c = 864e5;
                        break;
                    case "w":
                    case r:
                        c = 6048e5;
                        break;
                    default:
                        c = 1e3
                }
                return new h(this.valueOf() + t * c)
            }, m.subtract = function (t, e) {
                return this.add(-1 * t, e)
            }, m.format = function (t) {
                var e = this;
                return (t || "YYYY-MM-DDTHH:mm:ssZ").replace(o, function (t) {
                    switch (t) {
                        case "YY":
                            return String(e.$y).slice(-2);
                        case "YYYY":
                            return String(e.$y);
                        case "M":
                            return String(e.$M + 1);
                        case "MM":
                            return $(e.$M + 1, 2, "0");
                        case "MMM":
                            return c[e.$M].slice(0, 3);
                        case "MMMM":
                            return c[e.$M];
                        case "D":
                            return String(e.$D);
                        case "DD":
                            return $(e.$D, 2, "0");
                        case "d":
                            return String(e.$W);
                        case "dddd":
                            return u[e.$W];
                        case "H":
                            return String(e.$H);
                        case "HH":
                            return $(e.$H, 2, "0");
                        case "h":
                        case "hh":
                            return 0 === e.$H ? 12 : $(e.$H < 13 ? e.$H : e.$H - 12, "hh" === t ? 2 : 1, "0");
                        case "a":
                            return e.$H < 12 ? "am" : "pm";
                        case "A":
                            return e.$H < 12 ? "AM" : "PM";
                        case "m":
                            return String(e.$m);
                        case "mm":
                            return $(e.$m, 2, "0");
                        case "s":
                            return String(e.$s);
                        case "ss":
                            return $(e.$s, 2, "0");
                        case "Z":
                            return e.$zoneStr.slice(0, -2) + ":00";
                        default:
                            return e.$zoneStr
                    }
                })
            }, m.diff = function (e, n, u) {
                var c, o, $, f, l, m, M = d(n),
                    y = e instanceof h ? e : new h(e),
                    S = this - y,
                    g = (c = this, f = 12 * ((o = y).year() - c.year()) + (o.month() - c.month()), l = c.clone().add(f, "months"), $ = o - l < 0 ? (o - l) / (l - c.clone().add(f - 1, "months")) : (o - l) / (c.clone().add(f + 1, "months") - l), Number(-(f + $)));
                switch (M) {
                    case a:
                        g /= 12;
                        break;
                    case i:
                        break;
                    case "quarter":
                        g /= 3;
                        break;
                    case r:
                        g = S / 6048e5;
                        break;
                    case s:
                        g = S / 864e5;
                        break;
                    case t:
                        g = S / 1e3;
                        break;
                    default:
                        g = S
                }
                return u ? g : (m = g) < 0 ? Math.ceil(m) || 0 : Math.floor(m)
            }, m.daysInMonth = function () {
                return this.endOf(i).$D
            }, m.clone = function () {
                return new h(this)
            }, m.toDate = function () {
                return new Date(this.$d)
            }, m.toArray = function () {
                return [this.$y, this.$M, this.$D, this.$H, this.$m, this.$s, this.$ms]
            }, m.toJSON = function () {
                return this.toISOString()
            }, m.toISOString = function () {
                return this.toDate().toISOString()
            }, m.toObject = function () {
                return {
                    years: this.$y,
                    months: this.$M,
                    date: this.$D,
                    hours: this.$H,
                    minutes: this.$m,
                    seconds: this.$s,
                    milliseconds: this.$ms
                }
            }, m.toString = function () {
                return this.$d.toUTCString()
            }, h
        }();
    return function (t) {
        return new m(t)
    }
});